#!/bin/bash

set -euo pipefail

# Function to display help
show_help() {
    cat << EOF
USAGE
  sluggify <file_or_directory> [<file_or_directory>...]
  
ARGUMENTS
  file_or_directory    One or more paths to files or directories to rename

DESCRIPTION
  Converts filenames and directory names to URL-friendly slugs by converting to lowercase,
  replacing spaces with hyphens, removing special characters, and handling multiple
  consecutive separators. Preserves file extensions.

TRANSFORMATIONS
  - Convert to lowercase
  - Replace spaces and underscores with hyphens
  - Remove special characters (keep alphanumeric, hyphens, dots)
  - Collapse multiple consecutive hyphens
  - Remove leading/trailing hyphens and dots
  - Preserve file extensions

AUTOMATOR SETUP
  1. Create a new Quick Action in Automator.
  2. Set it to receive "files or folders" in any application.
  3. Optionally set an icon (e.g., "Compose").
  4. Add a "Run Shell Script" action.
  5. Set "Pass input" to "as arguments".
  6. Paste this script.
  7. Save as "Sluggify".

OPTIONS
  -h, --help    Show this help message and exit

EXAMPLES
  sluggify "My Document.pdf"              → my-document.pdf
  sluggify "Project Files & Notes"        → project-files-notes
  sluggify file1.txt "Bad File Name.doc"  → renames both files
EOF
}

# Function to sluggify a filename
sluggify_name() {
    local name="$1"
    
    # Convert to lowercase
    name=$(echo "$name" | tr '[:upper:]' '[:lower:]')
    
    # Replace spaces with hyphens
    name=$(echo "$name" | sed 's/ /-/g')
    
    # Replace underscores with hyphens (optional - you can remove this line if you want to keep underscores)
    name=$(echo "$name" | sed 's/_/-/g')
    
    # Remove or replace special characters, keeping only alphanumeric, hyphens, and dots
    name=$(echo "$name" | sed 's/[^a-z0-9.-]/-/g')
    
    # Replace multiple consecutive hyphens with single hyphen
    name=$(echo "$name" | sed 's/-\{2,\}/-/g')
    
    # Remove leading and trailing dots (but preserve extensions)
    name=$(echo "$name" | sed 's/^\.\+//g')
    
    # Handle multiple consecutive dots (except for extensions)
    # This preserves the last dot for file extension
    if [[ "$name" == *.* ]]; then
        local basename="${name%.*}"
        local extension="${name##*.}"
        # Clean up the basename
        basename=$(echo "$basename" | sed 's/\.\{2,\}/./g' | sed 's/\.$//g')
        # Remove leading and trailing hyphens from basename (before extension)
        basename=$(echo "$basename" | sed 's/^-*//; s/-*$//')
        name="${basename}.${extension}"
    else
        name=$(echo "$name" | sed 's/\.\{2,\}/./g' | sed 's/\.$//g')
        # Remove leading and trailing hyphens for files without extensions
        name=$(echo "$name" | sed 's/^-*//; s/-*$//')
    fi
    
    echo "$name"
}

# Validate arguments
if [ $# -eq 0 ]; then
    echo "Error: No file or directory provided" >&2
    echo "Use -h or --help for usage information" >&2
    exit 1
fi

# Handle help flag
if [[ "${1:-}" == "-h" || "${1:-}" == "--help" ]]; then
    show_help
    exit 0
fi

# Process each file/folder passed as an argument
for TARGET_PATH in "$@"; do
    # Skip if path doesn't exist
    if [ ! -e "$TARGET_PATH" ]; then
        echo "Error: Path does not exist: $TARGET_PATH"
        continue
    fi

    # Get the directory and current name
    PARENT_DIR="$(dirname "$TARGET_PATH")"
    CURRENT_NAME="$(basename "$TARGET_PATH")"

    # Sluggify the name
    NEW_NAME=$(sluggify_name "$CURRENT_NAME")

    # If the name hasn't changed, skip
    if [ "$CURRENT_NAME" = "$NEW_NAME" ]; then
        echo "No changes needed: $CURRENT_NAME"
        continue
    fi

    # Check if a file/folder with the new name already exists
    NEW_PATH="${PARENT_DIR}/${NEW_NAME}"
    if [ -e "$NEW_PATH" ]; then
        echo "Error: A file or folder with the name '$NEW_NAME' already exists"
        continue
    fi

    # Rename the file/folder
    mv "$TARGET_PATH" "$NEW_PATH"

    if [ $? -eq 0 ]; then
        echo "Renamed: $CURRENT_NAME → $NEW_NAME"
    else
        echo "Error: Failed to rename $CURRENT_NAME"
    fi
done
